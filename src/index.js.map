{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    DynamoDB,\n    PutItemCommand,\n    GetItemCommand,\n    DeleteItemCommand,\n    QueryCommand,\n} from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport {\n    EnvName,\n    ICustomDateFilter,\n    IDynamoConfig,\n    IGetTags,\n    IPutClip,\n    IPutTags,\n} from './interfaces';\nimport { translateConfig } from './utils/translateConfig';\nimport { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb';\nimport { SK_SEPARATOR } from '../constants';\nimport {\n    dateEst,\n    DateExpressionMapper,\n    getSk,\n    preMarshallPrep,\n} from './utils/dynamoUtils';\n\nenum Comparator {\n    gt = '>',\n    gte = '>=',\n    eq = '=',\n    lt = '<',\n    lte = '<=',\n    between = 'BETWEEN',\n}\n\nclass Repository {\n    public docClient;\n    public client;\n    protected envName;\n    public Comparator = Comparator;\n\n    constructor({\n        region = 'us-east-2',\n        envName = EnvName.DEV,\n    }: IDynamoConfig) {\n        this.client = new DynamoDB({ region });\n        this.docClient = DynamoDBDocumentClient.from(\n            this.client,\n            translateConfig\n        );\n        this.envName = envName;\n    }\n}\n\nexport class ClipsRepository extends Repository {\n    public tableName;\n    public static gsi = 'ratedAtDate-index';\n\n    constructor({ region = 'us-east-2', envName = EnvName.DEV }) {\n        super({ region, envName: EnvName.DEV });\n        this.tableName = `${envName}-clips`;\n    }\n\n    async create(createObject: IPutClip) {\n        const {\n            gameName,\n            guid,\n            username,\n            source,\n            sourceTitle,\n            sourceDescription,\n            tags,\n            duration,\n            resolutionHeight,\n            rating,\n            ratedAtDate,\n            usedInVideoAtDate,\n            usedInShortAtDate,\n            aggregatedAtDate,\n        } = createObject;\n        const filteredPut = preMarshallPrep({\n            pk: gameName,\n            sk: getSk(gameName, guid),\n            guid,\n            aggregatedAtDate,\n            username,\n            source,\n            sourceTitle,\n            sourceDescription,\n            tags,\n            duration,\n            resolutionHeight,\n            rating,\n            ratedAtDate,\n            usedInVideoAtDate,\n            usedInShortAtDate,\n            createdAt: dateEst(),\n        });\n\n        const { $metadata } = await this.docClient\n            .send(\n                new PutItemCommand({\n                    TableName: this.tableName,\n                    Item: marshall(filteredPut),\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        return $metadata.httpStatusCode === 200;\n    }\n\n    async put(putObject: IPutClip) {\n        const {\n            gameName,\n            guid,\n            username,\n            source,\n            sourceTitle,\n            sourceDescription,\n            tags,\n            duration,\n            resolutionHeight,\n            rating,\n            ratedAtDate,\n            usedInVideoAtDate,\n            usedInShortAtDate,\n            aggregatedAtDate,\n        } = putObject;\n        const filteredPut = preMarshallPrep({\n            pk: gameName,\n            sk: getSk(gameName, guid),\n            guid,\n            username,\n            source,\n            sourceTitle,\n            sourceDescription,\n            rating,\n            tags,\n            duration,\n            resolutionHeight,\n            aggregatedAtDate,\n            ratedAtDate,\n            usedInVideoAtDate,\n            usedInShortAtDate,\n            updatedAt: dateEst(),\n        });\n\n        const { $metadata } = await this.docClient\n            .send(\n                new PutItemCommand({\n                    TableName: this.tableName,\n                    Item: marshall(filteredPut),\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        return $metadata.httpStatusCode === 200;\n    }\n\n    async delete(gameName, guid) {\n        const { $metadata } = await this.docClient.send(\n            new DeleteItemCommand({\n                TableName: this.tableName,\n                Key: marshall({ pk: gameName, sk: getSk(gameName, guid) }),\n            })\n        );\n        return $metadata.httpStatusCode === 200;\n    }\n\n    async get(gameName, guid) {\n        const { Item } = await this.docClient\n            .send(\n                new GetItemCommand({\n                    TableName: this.tableName,\n                    Key: marshall({ pk: gameName, sk: getSk(gameName, guid) }),\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        if (!Item) {\n            console.log('No records returned for', getSk(gameName, guid));\n            return null;\n        }\n        return unmarshall(Item);\n    }\n\n    /**\n     * much deeper abstraction here however I think it will be much easier to implement in the\n     * other repos and it is robust enough to cover all of the short term needs i foresaw.\n     *\n     * @param gameName\n     * @param filter YOU CAN ONLY CHOSE 1 HERE\n     * @param comparator\n     * @param minimumRating\n     * @param includeUsedInVideo\n     * @param includeUsedInShort\n     */\n    async getByCustomDate(\n        gameName: string,\n        filter: ICustomDateFilter,\n        comparator: Comparator, //todo this and filter can be combined in an obj, and rating can have its own comparator too\n        minimumRating: number = 7,\n        includeUsedInVideo: boolean = false,\n        includeUsedInShort: boolean = false\n    ) {\n        const {\n            FilterExpression,\n            ExpressionAttributeNames,\n            ExpressionAttributeValues,\n            KeyConditionExpression,\n        } = DateExpressionMapper(\n            gameName,\n            filter,\n            comparator,\n            minimumRating,\n            includeUsedInVideo,\n            includeUsedInShort\n        );\n        const { Items } = this.docClient\n            .send(\n                new QueryCommand({\n                    TableName: this.tableName,\n                    ScanIndexForward: true,\n                    KeyConditionExpression,\n                    FilterExpression,\n                    ExpressionAttributeNames,\n                    ExpressionAttributeValues,\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        return unmarshall(Items);\n    }\n}\n\nexport class TagsRepository extends Repository {\n    public tableName;\n\n    constructor({ region = 'us-east-2', envName = EnvName.DEV }) {\n        super({ region, envName: EnvName.DEV });\n        this.tableName = `${envName}-tags`;\n    }\n\n    async put({ pk, tags }: IPutTags) {\n        const res = await this.docClient\n            .send(\n                new PutItemCommand({\n                    TableName: this.tableName,\n                    Item: marshall({ pk, tags }),\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        return res?.$metadata.httpStatusCode === 200;\n    }\n\n    async get() {\n        const { Item } = await this.docClient\n            .send(\n                new GetItemCommand({\n                    TableName: this.tableName,\n                    Key: marshall({\n                        pk: 'GLOBAL',\n                    }),\n                })\n            )\n            .catch((e) => {\n                console.log(e);\n                return e;\n            });\n        return unmarshall(Item);\n    }\n}\n\n// {\n//     TableName: this.tableName,\n//         ScanIndexForward: true,\n//     KeyConditionExpression: '#pk = :pk',\n//     FilterExpression,\n//     ExpressionAttributeNames: {\n//     '#pk': 'pk',\n//         [ratedAtDateMap.Key]: ratedAtDateMap.Name,\n//         [usedInVideoAtDateMap.Key]: usedInVideoAtDateMap.Name,\n//         [aggregatedAtDateMap.Key]: aggregatedAtDateMap.Name,\n//         [aggregatedAtDateMap.Key]: usedInShortAtDateMap.Name,\n// },\n//     ExpressionAttributeValues: marshall({\n//         ':pk': gameName,\n//         [ratedAtDateMap.Value]: ratedAtDate,\n//         // [usedInShortAtDateMap.Value]: usedInVideoAtDate,\n//         // [aggregatedAtDateMap.Value]: aggregatedAtDate,\n//         // [usedInShortAtDateMap.Value]: usedInShortAtDate,\n//     }),\n// }\n"]}