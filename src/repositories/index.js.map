{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAAA,8DAAkE;AAClE,8DAA2D;AAC3D,wDAA+D;AAC/D,4CAAsE;AACtE,0DAA8D;AAC9D,oDAA4C;AAC5C,sDAG8B;AAE9B,IAAY,UAOX;AAPD,WAAY,UAAU;IAClB,sBAAQ,CAAA;IACR,wBAAU,CAAA;IACV,sBAAQ,CAAA;IACR,sBAAQ,CAAA;IACR,wBAAU,CAAA;IACV,iCAAmB,CAAA;AACvB,CAAC,EAPW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAOrB;AAED,MAAa,UAAU;IAOnB;QAFO,eAAU,GAAG,UAAU,CAAC;QAG3B,IAAI,CAAC,MAAM,GAAG,IAAI,0BAAQ,CAAC,yBAAa,IAAI,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,qCAAsB,CAAC,IAAI,CACxC,IAAI,CAAC,MAAM,EACX,iCAAe,CAClB,CAAC;IACN,CAAC;IAED,KAAK,CAAC,aAAa,CACf,EAAU,EACV,kBAA0B,EAC1B,cAAuB,KAAK;QAE5B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS;aACjC,IAAI,CACD,IAAI,8BAAY,CAAC;YACb,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,gBAAgB,EAAE,IAAI;YACtB,KAAK,EAAE,yBAAa;YACpB,sBAAsB,EAAE,UAAU;YAClC,gBAAgB,EACZ,IAAA,8CAAgC,EAAC,kBAAkB,CAAC;YACxD,yBAAyB,EAAE,IAAA,wBAAQ,EAAC;gBAChC,KAAK,EAAE,EAAE;gBACT,GAAG,IAAA,+CAAiC,EAChC,kBAAkB,CACrB;aACJ,CAAC;SACL,CAAC,CACL;aACA,KAAK,CAAC,kBAAK,CAAC,CAAC;QAElB,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,0BAAU,CAAC,CAAC;QACvC,OAAO,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAChD,CAAC;CACJ;AA1CD,gCA0CC","sourcesContent":["import { DynamoDB, QueryCommand } from '@aws-sdk/client-dynamodb';\nimport { translateConfig } from '../utils/translateConfig';\nimport { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb';\nimport { DEFAULT_LIMIT, DYNAMO_CONFIG, NODE_ENV } from '../constants';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { logIt } from '../utils/logItUtils';\nimport {\n    objectToEqualityFilterExpression,\n    objectToExpressionAttributeValues,\n} from '../utils/dynamoUtils';\n\nexport enum Comparator {\n    gt = '>',\n    gte = '>=',\n    eq = '=',\n    lt = '<',\n    lte = '<=',\n    between = 'BETWEEN',\n}\n\nexport class Repository {\n    public docClient;\n    public client;\n    protected envName;\n    public tableName;\n    public Comparator = Comparator;\n\n    constructor() {\n        this.client = new DynamoDB(DYNAMO_CONFIG || {});\n        this.docClient = DynamoDBDocumentClient.from(\n            this.client,\n            translateConfig\n        );\n    }\n\n    async getByEquality(\n        pk: string,\n        equalityConditions: object,\n        isReturnOne: boolean = false\n    ) {\n        const { Items } = await this.docClient\n            .send(\n                new QueryCommand({\n                    TableName: this.tableName,\n                    ScanIndexForward: true,\n                    Limit: DEFAULT_LIMIT,\n                    KeyConditionExpression: 'pk = :pk',\n                    FilterExpression:\n                        objectToEqualityFilterExpression(equalityConditions),\n                    ExpressionAttributeValues: marshall({\n                        ':pk': pk,\n                        ...objectToExpressionAttributeValues(\n                            equalityConditions\n                        ),\n                    }),\n                })\n            )\n            .catch(logIt);\n\n        const response = Items.map(unmarshall);\n        return isReturnOne ? response[0] : response;\n    }\n}\n"]}