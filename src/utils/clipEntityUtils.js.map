{"version":3,"file":"clipEntityUtils.js","sourceRoot":"","sources":["clipEntityUtils.ts"],"names":[],"mappings":";;;AACA,+BAA0B;AAC1B,+CAA6C;AAC7C,2CAAsC;AACtC,+CAAuD;AAqBhD,MAAM,gBAAgB,GAAG,CAC5B,QAAgB,EAChB,MAAc,EACd,OAAqB,EACrB,aAAa,GAAG,KAAK,EACrB,IAAI,GAAG,IAAA,SAAE,GAAE,EACX,MAAM,GAAG,SAAS,EACb,EAAE;IACP,OAAO;QACH,IAAI;QACJ,QAAQ;QACR,SAAS,EAAE,IAAA,mBAAO,GAAE;QACpB,MAAM,EACF,MAAM;YACN,IAAA,0BAAY,EAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI,aAAa,EAAE,CAAC;QAC9D,GAAG,OAAO;QACV,gBAAgB,EAAE,IAAA,mBAAO,GAAE;KAC9B,CAAC;AACN,CAAC,CAAC;AAlBW,QAAA,gBAAgB,oBAkB3B;AAOK,MAAM,eAAe,GAAG,CAAC,IAAW,EAAE,OAAiB,EAAE,EAAE;IAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC;IAC1C,OAAO,IAAA,6BAAe,EAAC;QACnB,EAAE,EAAE,QAAQ;QACZ,EAAE,EAAE,IAAA,mBAAK,EAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC;QAC9B,GAAG,CAAC,OAAO,CAAC,cAAc,IAAI,EAAE,SAAS,EAAE,IAAA,mBAAO,GAAE,EAAE,CAAC;QACvD,GAAG,CAAC,OAAO,CAAC,cAAc,IAAI,EAAE,SAAS,EAAE,IAAA,mBAAO,GAAE,EAAE,CAAC;QACvD,GAAG,IAAI;KACV,CAAC,CAAC;AACP,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B","sourcesContent":["import { IClip } from '../interfaces';\nimport { v4 } from 'uuid';\nimport { createS3Path } from './s3PathUtils';\nimport { dateEst } from './dateUtils';\nimport { getSk, preMarshallPrep } from './dynamoUtils';\n\ninterface IClipPartial {\n    username?: string;\n    source?: string;\n    sourceTitle?: string;\n    sourceDescription?: string;\n    rating?: number;\n    ratedAtDate?: string;\n    usedInVideoAtDate?: string;\n    usedInShortAtDate?: string;\n    shortS3Path?: string;\n    originalClipS3Path?: string;\n    aggregatedAtDate?: string;\n    tags?: string[];\n    duration?: number;\n    resolutionHeight?: number;\n    thumbnailS3Path?: string;\n    updatedAt?: string;\n}\n\nexport const createClipEntity = (\n    gameName: string,\n    folder: string,\n    columns: IClipPartial,\n    fileExtension = 'mp4',\n    guid = v4(),\n    s3Path = undefined\n): IClip => {\n    return {\n        guid,\n        gameName,\n        createdAt: dateEst(),\n        s3Path:\n            s3Path ||\n            createS3Path(folder, gameName, `${guid}.${fileExtension}`),\n        ...columns,\n        aggregatedAtDate: dateEst(),\n    };\n};\n\ninterface IOptions {\n    isAddCreatedAt?: boolean;\n    isAddUpdatedAt?: boolean;\n}\n\nexport const preMarshallClip = (clip: IClip, options: IOptions) => {\n    const gameName = clip.gameName || clip.pk;\n    return preMarshallPrep({\n        pk: gameName,\n        sk: getSk(gameName, clip.guid),\n        ...(options.isAddCreatedAt && { createdAt: dateEst() }),\n        ...(options.isAddUpdatedAt && { updatedAt: dateEst() }),\n        ...clip,\n    });\n};\n"]}