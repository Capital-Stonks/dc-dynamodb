{"version":3,"file":"createTables.js","sourceRoot":"","sources":["../createTables.ts"],"names":[],"mappings":";;;AAAA,wEAAqE;AACrE,yCAAiE;AAEjE,MAAM,OAAO,GAAG,aAAa,CAAC;AAEvB,MAAM,4BAA4B,GAAG,KAAK,IAAI,EAAE;IACnD,MAAM,SAAS,GAAG,IAAI,iCAAe,EAAE,CAAC;IACxC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC;IAC5B,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,CAAC;IACtE,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACzC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACpC,EAAE,CAAC,WAAW,CAAC,IAAA,yBAAgB,EAAC,OAAO,CAAC,CAAC;YACzC,EAAE,CAAC,WAAW,CAAC,IAAA,wBAAe,EAAC,OAAO,CAAC,CAAC;SAC3C,CAAC,CAAC;KACN;AACL,CAAC,CAAC;AAVW,QAAA,4BAA4B,gCAUvC","sourcesContent":["import { ClipsRepository } from './src/repositories/clipsRepository';\nimport { clipsTableSchema, tagsTableSchema } from './src/schema';\n\nconst DEV_ENV = 'development';\n\nexport const conditionallyCreateDevTables = async () => {\n    const clipsRepo = new ClipsRepository();\n    const db = clipsRepo.client;\n    const { TableNames: createdTables } = await db.listTables().promise();\n    if (Object.keys(createdTables).length === 0) {\n        const create = await Promise.allSettled([\n            db.createTable(clipsTableSchema(DEV_ENV)),\n            db.createTable(tagsTableSchema(DEV_ENV)),\n        ]);\n    }\n};\n"]}