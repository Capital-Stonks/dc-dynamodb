{"version":3,"file":"migrateTables.js","sourceRoot":"","sources":["../migrateTables.ts"],"names":[],"mappings":";;AAAA,+CAAkD;AAClD,wEAAqE;AACrE,sEAAmE;AACnE,yCAAiE;AACjE,qCAAoC;AAEpC,2EAA2E;AAC3E,MAAM,WAAW,GAAG,2BAAe,CAAC;AACpC,MAAM,SAAS,GAAG,IAAI,iCAAe,EAAE,CAAC;AAExC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC;AAE5B,MAAM,QAAQ,GAAG,IAAI,+BAAc,EAAE,CAAC;AACtC,MAAM,aAAa,GAAG,IAAI,CAAC;AAC3B,wDAAwD;AACxD,MAAM,aAAa,GAAG,KAAK,CAAC;AAC5B,MAAM,kCAAkC,GAAG,KAAK,CAAC;AACjD,CAAC,KAAK,IAAI,EAAE;IACR,IAAI,aAAa,IAAI,kCAAkC,EAAE;QACrD,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACjC,EAAE,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,SAAS,EAAE,CAAC;YAClD,EAAE,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC;SACpD,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,IAAI,aAAa,EAAE;QACf,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACpC,EAAE,CAAC,WAAW,CAAC,IAAA,yBAAgB,EAAC,WAAW,CAAC,CAAC;YAC7C,EAAE,CAAC,WAAW,CAAC,IAAA,wBAAe,EAAC,WAAW,CAAC,CAAC;SAC/C,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,EAAE;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACvB;IAED,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAM,EAAE,CAAC,CAAC;IAC/D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,EAAE,CAAC","sourcesContent":["import { DYNAMO_ENV_NAME } from './src/constants';\nimport { ClipsRepository } from './src/repositories/clipsRepository';\nimport { TagsRepository } from './src/repositories/tagsRepository';\nimport { clipsTableSchema, tagsTableSchema } from './src/schema';\nimport { tagMap } from './src/tags';\n\n// this file is just to run a one time migration to get the tables into aws\nconst environment = DYNAMO_ENV_NAME;\nconst clipsRepo = new ClipsRepository();\n\nconst db = clipsRepo.client;\n\nconst tagsRepo = new TagsRepository();\nconst CREATE_TABLES = true;\n// dont set to true unless you want to delete the tables\nconst DELETE_TABLES = false;\nconst YOU_SURE_YOU_WANT_TO_DELETE_TABLES = false;\n(async () => {\n    if (DELETE_TABLES && YOU_SURE_YOU_WANT_TO_DELETE_TABLES) {\n        const del = await Promise.allSettled([\n            db.deleteTable({ TableName: clipsRepo.tableName }),\n            db.deleteTable({ TableName: tagsRepo.tableName }),\n        ]);\n        console.log(del);\n    }\n    if (CREATE_TABLES) {\n        const create = await Promise.allSettled([\n            db.createTable(clipsTableSchema(environment)),\n            db.createTable(tagsTableSchema(environment)),\n        ]).catch((e) => {\n            if (e) {\n                console.log(JSON.stringify(e));\n            }\n        });\n        console.log(create);\n    }\n\n    const put = await tagsRepo.put({ pk: 'GLOBAL', tags: tagMap });\n    console.log(put);\n})();\n"]}