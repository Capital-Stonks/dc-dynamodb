{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/repositories/index.ts"],"names":[],"mappings":";;;AAAA,8DAAkE;AAElE,8DAA2D;AAC3D,wDAA+D;AAC/D,4CAA+C;AAC/C,0DAA8D;AAC9D,oDAA4C;AAC5C,sDAG8B;AAE9B,IAAY,UAOX;AAPD,WAAY,UAAU;IAClB,sBAAQ,CAAA;IACR,wBAAU,CAAA;IACV,sBAAQ,CAAA;IACR,sBAAQ,CAAA;IACR,wBAAU,CAAA;IACV,iCAAmB,CAAA;AACvB,CAAC,EAPW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAOrB;AACD,MAAa,UAAU;IAOnB,YAAY,EACR,MAAM,GAAG,WAAW,EACpB,OAAO,GAAG,2BAAe,GACb;QALT,eAAU,GAAG,UAAU,CAAC;QAM3B,IAAI,CAAC,MAAM,GAAG,IAAI,0BAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,qCAAsB,CAAC,IAAI,CACxC,IAAI,CAAC,MAAM,EACX,iCAAe,CAClB,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,aAAa,CACf,EAAU,EACV,kBAA0B,EAC1B,cAAuB,KAAK;QAE5B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS;aACjC,IAAI,CACD,IAAI,8BAAY,CAAC;YACb,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,gBAAgB,EAAE,IAAI;YACtB,sBAAsB,EAAE,UAAU;YAClC,gBAAgB,EACZ,IAAA,8CAAgC,EAAC,kBAAkB,CAAC;YACxD,yBAAyB,EAAE,IAAA,wBAAQ,EAAC;gBAChC,KAAK,EAAE,EAAE;gBACT,GAAG,IAAA,+CAAiC,EAChC,kBAAkB,CACrB;aACJ,CAAC;SACL,CAAC,CACL;aACA,KAAK,CAAC,kBAAK,CAAC,CAAC;QAElB,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,0BAAU,CAAC,CAAC;QACvC,OAAO,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAChD,CAAC;CACJ;AA7CD,gCA6CC","sourcesContent":["import { DynamoDB, QueryCommand } from '@aws-sdk/client-dynamodb';\r\nimport { IDynamoConfig } from '../interfaces';\r\nimport { translateConfig } from '../utils/translateConfig';\r\nimport { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb';\r\nimport { DYNAMO_ENV_NAME } from '../constants';\r\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\r\nimport { logIt } from '../utils/logItUtils';\r\nimport {\r\n    objectToEqualityFilterExpression,\r\n    objectToExpressionAttributeValues,\r\n} from '../utils/dynamoUtils';\r\n\r\nexport enum Comparator {\r\n    gt = '>',\r\n    gte = '>=',\r\n    eq = '=',\r\n    lt = '<',\r\n    lte = '<=',\r\n    between = 'BETWEEN',\r\n}\r\nexport class Repository {\r\n    public docClient;\r\n    public client;\r\n    protected envName;\r\n    public tableName;\r\n    public Comparator = Comparator;\r\n\r\n    constructor({\r\n        region = 'us-east-2',\r\n        envName = DYNAMO_ENV_NAME,\r\n    }: IDynamoConfig) {\r\n        this.client = new DynamoDB({ region });\r\n        this.docClient = DynamoDBDocumentClient.from(\r\n            this.client,\r\n            translateConfig\r\n        );\r\n        this.envName = envName;\r\n    }\r\n\r\n    async getByEquality(\r\n        pk: string,\r\n        equalityConditions: object,\r\n        isReturnOne: boolean = false\r\n    ) {\r\n        const { Items } = await this.docClient\r\n            .send(\r\n                new QueryCommand({\r\n                    TableName: this.tableName,\r\n                    ScanIndexForward: true,\r\n                    KeyConditionExpression: 'pk = :pk',\r\n                    FilterExpression:\r\n                        objectToEqualityFilterExpression(equalityConditions),\r\n                    ExpressionAttributeValues: marshall({\r\n                        ':pk': pk,\r\n                        ...objectToExpressionAttributeValues(\r\n                            equalityConditions\r\n                        ),\r\n                    }),\r\n                })\r\n            )\r\n            .catch(logIt);\r\n\r\n        const response = Items.map(unmarshall);\r\n        return isReturnOne ? response[0] : response;\r\n    }\r\n}\r\n"]}