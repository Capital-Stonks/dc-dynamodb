{"version":3,"file":"s3Utils.js","sourceRoot":"","sources":["../../../src/utils/s3Utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AACzB,6CAA+B;AAC/B,4CAA2C;AAE9B,QAAA,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC;AAExB,MAAM,mBAAmB,GAAG,CAAC,SAAS,EAAE,EAAE,CAC7C,SAAS,CAAC,GAAG,CAAC,0BAAkB,CAAC,CAAC;AADzB,QAAA,mBAAmB,uBACM;AAE/B,MAAM,kBAAkB,GAAG,CAAC,QAAQ,EAAE,EAAE;IAC3C,MAAM,YAAY,GAAG,UAAE,CAAC,YAAY,CAAC,WAAW,EAAE;QAC9C,MAAM,EAAE,uBAAW;QACnB,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,OAAO,EAAE,KAAK;KACjB,CAAC,CAAC;IACH,OAAO;QACH,GAAG,QAAQ;QACX,YAAY;KACf,CAAC;AACN,CAAC,CAAC;AAVW,QAAA,kBAAkB,sBAU7B;AAEK,MAAM,SAAS,GAAG,CAAC,KAAa,EAAE,EAAE;IACvC,OAAO,UAAE;SACJ,SAAS,CAAC;QACP,MAAM,EAAE,uBAAW;QACnB,GAAG,EAAE,KAAK;KACb,CAAC;SACD,OAAO,EAAE;SACT,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC,CAAC;AARW,QAAA,SAAS,aAQpB;AAEK,MAAM,UAAU,GAAG,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE;IACrD,OAAO,IAAA,kBAAU,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAC9C,IAAA,oBAAY,EAAC,UAAU,CAAC,CAC3B,CAAC;AACN,CAAC,CAAC;AAJW,QAAA,UAAU,cAIrB;AAEK,MAAM,UAAU,GAAG,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;IACnD,MAAM,OAAO,GAAG;QACZ,MAAM,EAAE,uBAAW;QACnB,UAAU,EAAE,GAAG,uBAAW,IAAI,SAAS,EAAE;QACzC,GAAG,EAAE,OAAO;KACf,CAAC;IACF,OAAO,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;AAC5C,CAAC,CAAC;AAPW,QAAA,UAAU,cAOrB;AAEK,MAAM,iBAAiB,GAAG,KAAK,EAClC,KAAa,EACb,QAAgB,EACD,EAAE;IACjB,MAAM,OAAO,GAAG;QACZ,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC/B,MAAM,EAAE,uBAAW;QACnB,GAAG,EAAE,KAAK;KACb,CAAC;IACF,OAAO,UAAE;SACJ,SAAS,CAAC,OAAO,CAAC;SAClB,OAAO,EAAE;SACT,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAC,CAAC;AAbW,QAAA,iBAAiB,qBAa5B;AAEK,MAAM,aAAa,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/C,GAAG,EAAE,GAAG;IACR,MAAM,EAAE,MAAM;CACjB,CAAC,CAAC;AAHU,QAAA,aAAa,iBAGvB;AAEI,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,EAAE;IAClC,MAAM,OAAO,GAAG;QACZ,MAAM,EAAE,uBAAW;QACnB,GAAG,EAAE,KAAK;KACb,CAAC;IACF,OAAO,UAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;AAC9C,CAAC,CAAC;AANW,QAAA,YAAY,gBAMvB","sourcesContent":["import * as fs from 'fs';\r\nimport * as AWS from 'aws-sdk';\r\nimport { BUCKET_NAME } from '../constants';\r\n\r\nexport const s3 = new AWS.S3();\r\n\r\nexport const createPresignedUrls = (s3Objects) =>\r\n    s3Objects.map(createPresignedUrl);\r\n\r\nexport const createPresignedUrl = (s3Object) => {\r\n    const presignedUrl = s3.getSignedUrl('getObject', {\r\n        Bucket: BUCKET_NAME,\r\n        Key: s3Object.Key,\r\n        Expires: 86400,\r\n    });\r\n    return {\r\n        ...s3Object,\r\n        presignedUrl,\r\n    };\r\n};\r\n\r\nexport const getObject = (s3Key: string) => {\r\n    return s3\r\n        .getObject({\r\n            Bucket: BUCKET_NAME,\r\n            Key: s3Key,\r\n        })\r\n        .promise()\r\n        .catch(() => null);\r\n};\r\n\r\nexport const moveObject = async (fromS3Path, toS3Path) => {\r\n    return copyObject(fromS3Path, toS3Path).then(() =>\r\n        deleteObject(fromS3Path)\r\n    );\r\n};\r\n\r\nexport const copyObject = async (sourceKey, destKey) => {\r\n    const options = {\r\n        Bucket: BUCKET_NAME,\r\n        CopySource: `${BUCKET_NAME}/${sourceKey}`,\r\n        Key: destKey,\r\n    };\r\n    return s3.copyObject(options).promise();\r\n};\r\n\r\nexport const putObjectFromFile = async (\r\n    s3Key: string,\r\n    filePath: string\r\n): Promise<string> => {\r\n    const options = {\r\n        Body: fs.readFileSync(filePath),\r\n        Bucket: BUCKET_NAME,\r\n        Key: s3Key,\r\n    };\r\n    return s3\r\n        .putObject(options)\r\n        .promise()\r\n        .then(() => s3Key);\r\n};\r\n\r\nexport const createOptions = ({ key, bucket }) => ({\r\n    Key: key,\r\n    Bucket: bucket,\r\n});\r\n\r\nexport const deleteObject = (s3Key) => {\r\n    const options = {\r\n        Bucket: BUCKET_NAME,\r\n        Key: s3Key,\r\n    };\r\n    return s3.deleteObject(options).promise();\r\n};\r\n"]}