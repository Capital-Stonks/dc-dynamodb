{"version":3,"file":"clipEntityUtils.js","sourceRoot":"","sources":["../../../src/utils/clipEntityUtils.ts"],"names":[],"mappings":";;;AACA,+BAA0B;AAC1B,+CAA6C;AAC7C,2CAAsC;AACtC,+CAAuD;AAmBhD,MAAM,gBAAgB,GAAG,CAC5B,QAAgB,EAChB,MAAc,EACd,OAAqB,EACrB,aAAa,GAAG,KAAK,EAChB,EAAE;IACP,MAAM,IAAI,GAAG,IAAA,SAAE,GAAE,CAAC;IAClB,OAAO;QACH,IAAI;QACJ,QAAQ;QACR,SAAS,EAAE,IAAA,mBAAO,GAAE;QACpB,MAAM,EAAE,IAAA,0BAAY,EAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI,aAAa,EAAE,CAAC;QAClE,GAAG,OAAO;KACb,CAAC;AACN,CAAC,CAAC;AAdW,QAAA,gBAAgB,oBAc3B;AAOK,MAAM,eAAe,GAAG,CAAC,IAAW,EAAE,OAAiB,EAAE,EAAE;IAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC;IAC1C,OAAO,IAAA,6BAAe,EAAC;QACnB,EAAE,EAAE,QAAQ;QACZ,EAAE,EAAE,IAAA,mBAAK,EAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC;QAC9B,GAAG,CAAC,OAAO,CAAC,cAAc,IAAI,EAAE,SAAS,EAAE,IAAA,mBAAO,GAAE,EAAE,CAAC;QACvD,GAAG,CAAC,OAAO,CAAC,cAAc,IAAI,EAAE,SAAS,EAAE,IAAA,mBAAO,GAAE,EAAE,CAAC;QACvD,GAAG,IAAI;KACV,CAAC,CAAC;AACP,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B","sourcesContent":["import { IClip } from '../interfaces';\r\nimport { v4 } from 'uuid';\r\nimport { createS3Path } from './s3PathUtils';\r\nimport { dateEst } from './dateUtils';\r\nimport { getSk, preMarshallPrep } from './dynamoUtils';\r\n\r\ninterface IClipPartial {\r\n    username?: string;\r\n    source?: string;\r\n    sourceTitle?: string;\r\n    sourceDescription?: string;\r\n    rating?: number;\r\n    ratedAtDate?: string;\r\n    usedInVideoAtDate?: string;\r\n    usedInShortAtDate?: string;\r\n    aggregatedAtDate?: string;\r\n    tags?: string[];\r\n    duration?: number;\r\n    resolutionHeight?: number;\r\n    thumbnailS3Path?: string;\r\n    updatedAt?: string;\r\n}\r\n\r\nexport const createClipEntity = (\r\n    gameName: string,\r\n    folder: string,\r\n    columns: IClipPartial,\r\n    fileExtension = 'mp4'\r\n): IClip => {\r\n    const guid = v4();\r\n    return {\r\n        guid,\r\n        gameName,\r\n        createdAt: dateEst(),\r\n        s3Path: createS3Path(folder, gameName, `${guid}.${fileExtension}`),\r\n        ...columns,\r\n    };\r\n};\r\n\r\ninterface IOptions {\r\n    isAddCreatedAt?: boolean;\r\n    isAddUpdatedAt?: boolean;\r\n}\r\n\r\nexport const preMarshallClip = (clip: IClip, options: IOptions) => {\r\n    const gameName = clip.gameName || clip.pk;\r\n    return preMarshallPrep({\r\n        pk: gameName,\r\n        sk: getSk(gameName, clip.guid),\r\n        ...(options.isAddCreatedAt && { createdAt: dateEst() }),\r\n        ...(options.isAddUpdatedAt && { updatedAt: dateEst() }),\r\n        ...clip,\r\n    });\r\n};\r\n"]}