{"version":3,"file":"dynamo.util.test.js","sourceRoot":"","sources":["dynamo.util.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { TagsRepository } from '../src/repositories/tagsRepository';\nimport { ClipsRepository } from '../src/repositories/clipsRepository';\nimport { EnvName } from '../src/interfaces';\nimport { v4 } from 'uuid';\nimport { getSk } from '../src/utils/dynamoUtils';\nimport momentTz from 'moment-timezone';\n\nconst moment = momentTz;\n\njest.setTimeout(1000000);\n\ndescribe('dynamo.util', () => {\n    let clipsRepo;\n    let tagsRepo;\n    let guid = v4();\n    let gameName = 'VALORANT';\n    beforeAll(async () => {\n        clipsRepo = new ClipsRepository();\n        tagsRepo = new TagsRepository();\n    });\n\n    afterEach(async () => {\n        const del = await clipsRepo.delete(gameName, getSk(gameName, guid));\n        console.log(del);\n    });\n\n    describe('puts', () => {\n        test('creates clip', async () => {\n            const date = moment()\n                .tz('America/New_York')\n                .format('YYYY-MM-DD HH:mm:ss.SSS');\n\n            const put = await clipsRepo.put({\n                gameName,\n                guid,\n                username: 'jake',\n                source: 'twitter',\n                sourceTitle: 'most yoked ace',\n                sourceDescription: 'so chad omg',\n                tags: ['wow', 'ace'],\n                duration: 190,\n                resolutionHeight: 69,\n                rating: 9,\n                ratedAtDate: date,\n                usedInVideoAtDate: date,\n                usedInShortAtDate: date,\n                aggregatedAtDate: date,\n            });\n            expect(put).toBeTruthy();\n        });\n\n        test('updates clip without overwriting undefined keys', async () => {\n            const date = moment()\n                .tz('America/New_York')\n                .format('YYYY-MM-DD HH:mm:ss.SSS');\n\n            const put = await clipsRepo.put({\n                gameName,\n                guid,\n                username: 'jake',\n                source: 'twitter',\n                sourceTitle: 'most yoked ace',\n                sourceDescription: 'so chad omg',\n                tags: ['wow', 'ace'],\n                duration: 999999,\n                resolutionHeight: 69,\n                rating: 9,\n                ratedAtDate: date,\n                usedInVideoAtDate: date,\n                usedInShortAtDate: date,\n                aggregatedAtDate: date,\n            });\n            expect(put).toBeTruthy();\n\n            const item = await clipsRepo.get(gameName, guid);\n            expect(item).toBeTruthy();\n            expect(item.duration).toBe(999999);\n\n            const putWithoutOverwritingUndefined = await clipsRepo.put({\n                gameName,\n                guid,\n                username: 'jake',\n                source: 'twitter',\n                sourceTitle: 'most yoked ace',\n                sourceDescription: 'so chad omg',\n                tags: ['wow', 'ace'],\n                duration: 12,\n                resolutionHeight: 69,\n                rating: 9,\n                ratedAtDate: date,\n                usedInVideoAtDate: date,\n                aggregatedAtDate: date,\n            });\n            expect(putWithoutOverwritingUndefined).toBeTruthy();\n\n            const item2 = await clipsRepo.get(gameName, guid);\n            expect(item2.duration).toBe(12);\n        });\n    });\n\n    describe('deletes', () => {\n        test('deletes clip', async () => {\n            const date = moment()\n                .tz('America/New_York')\n                .format('YYYY-MM-DD HH:mm:ss.SSS');\n            const put = await clipsRepo.put({\n                gameName,\n                guid,\n                username: 'jake',\n                source: 'twitter',\n                sourceTitle: 'most yoked ace',\n                sourceDescription: 'so chad omg',\n                tags: ['wow', 'ace'],\n                duration: 190,\n                resolutionHeight: 69,\n                rating: 9,\n                ratedAtDate: date,\n                usedInVideoAtDate: date,\n                aggregatedAtDate: date,\n            });\n            expect(put).toBeTruthy();\n            const del = await clipsRepo.delete(gameName, guid);\n            expect(del).toBeTruthy();\n        });\n    });\n\n    describe('date query', () => {\n        test('querys clip by date', async () => {\n            const date = moment()\n                .tz('America/New_York')\n                .format('YYYY-MM-DD HH:mm:ss.SSS');\n            const query = await clipsRepo.getByCustomDate(\n                gameName,\n                {\n                    ratedAtDate: '2021-01-01',\n                    // usedInVideoAtDate: '2019-01-01',\n                    // aggregatedAtDate: '2020-01-01',\n                },\n                clipsRepo.Comparator.eq,\n                3,\n                false,\n                false\n            );\n            expect(query).toBeTruthy();\n            const del = await clipsRepo.delete(gameName, guid);\n            expect(del).toBeTruthy();\n        });\n    });\n    describe('tags repo', () => {\n        test('puts tags', async () => {\n            const put = await tagsRepo.put({\n                pk: 'VALORANT',\n                sk: `VALORANT#`,\n                tags: ['test', 'tags'],\n            });\n            expect(put).toBe(true);\n        });\n\n        test.only('gets tags', async () => {\n            const get = await tagsRepo.get({\n                pk: 'GLOBAL',\n                sk: `VALORANT#`,\n            });\n\n            expect(get).toHaveProperty('tags');\n        });\n    });\n});\n"]}