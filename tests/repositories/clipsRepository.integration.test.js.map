{"version":3,"file":"clipsRepository.integration.test.js","sourceRoot":"","sources":["clipsRepository.integration.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { IClip } from '../../src/interfaces';\n\nconst ORIG_ENV = { ...process.env };\nprocess.env.NODE_ENV = 'development';\n\nimport { ClipsRepository } from '../../src/repositories/clipsRepository';\nimport { clipFactory } from '../factory';\n\ndescribe('clipsRepository', () => {\n    const clip1 = clipFactory({\n        s3Path: 'folder1/valorant/file1',\n        usedInShortAtDate: undefined,\n        ratedAt: '2022-01-01 00:00:00.000Z',\n    }) as IClip;\n    const clip2 = clipFactory({\n        s3Path: 'folder2/valorant/file2',\n        usedInShortAtDate: undefined,\n    }) as IClip;\n    const clip3 = clipFactory({ s3Path: 'folder3/valorant/file3' }) as IClip;\n    const clipRepo = new ClipsRepository();\n\n    beforeAll(async () => {\n        await clipRepo.create(clip1 as IClip);\n        await clipRepo.create(clip2 as IClip);\n        await clipRepo.create(clip3 as IClip);\n    });\n\n    afterAll(async () => {\n        process.env = { ...ORIG_ENV };\n        await clipRepo.delete(clip1.gameName, clip1.guid);\n        await clipRepo.delete(clip2.gameName, clip2.guid);\n        await clipRepo.delete(clip3.gameName, clip3.guid);\n    });\n\n    describe('getByFolder', () => {\n        test('returns items by folder & gameName', async () => {\n            const clips = await clipRepo.getByFolder('folder1', 'valorant');\n            expect(clips.length).toBe(1);\n            expect(clips[0].guid).toBe(clip1.guid);\n        });\n    });\n\n    describe('getUsedInShort', () => {\n        test('returns entities that have been used in a short', async () => {\n            const usedInShort = await clipRepo.getUsedInShort('valorant');\n            expect(Array.isArray(usedInShort)).toBe(true);\n            expect(usedInShort[0].guid).toBe(clip3.guid);\n        });\n    });\n\n    describe('getPreProcessShortsByDate', () => {\n        test('returns entities that have been used in a short', async () => {\n            const usedInShort = await clipRepo.getPreProcessShortsByDate(\n                'valorant',\n                '2022-01-01'\n            );\n            expect(usedInShort.length).toBe(1);\n            expect(usedInShort[0].guid).toBe(clip1.guid);\n        });\n    });\n\n    describe('getByS3Path', () => {\n        test('returns entities by s3 path', async () => {\n            const entity = await clipRepo.getByS3Path('valorant', clip1.s3Path);\n            expect(entity.guid).toBe(clip1.guid);\n        });\n    });\n});\n"]}